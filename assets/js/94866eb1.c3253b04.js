"use strict";(self.webpackChunkscrap_docs=self.webpackChunkscrap_docs||[]).push([[2450],{7585:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(4848),r=n(8453);const i={title:"Playing - WIP"},c="Playing",s={id:"networking/protocol/playing",title:"Playing - WIP",description:"The connection state of the player. After being accepted into the server.",source:"@site/docs/networking/protocol/playing.mdx",sourceDirName:"networking/protocol",slug:"/networking/protocol/playing",permalink:"/docs/networking/protocol/playing",draft:!1,unlisted:!1,editUrl:"https://pr.new/github.com/Scrap-Mods/docs/blob/main/docs/networking/protocol/playing.mdx",tags:[],version:"current",frontMatter:{title:"Playing - WIP"},sidebar:"networkingSidebar",previous:{title:"Joining",permalink:"/docs/networking/protocol/joining"},next:{title:"BitStream",permalink:"/docs/networking/common-encoding-patterns/bitstream"}},a={},l=[{value:"Packets",id:"packets",level:2}];function p(e){const t={h1:"h1",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"playing",children:"Playing"}),"\n",(0,o.jsx)(t.p,{children:"The connection state of the player. After being accepted into the server."}),"\n",(0,o.jsx)(t.h2,{id:"packets",children:"Packets"}),"\n",(0,o.jsx)(t.p,{children:"IDs: 0x11(17) - 0x24(40)"})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(6540);const r={},i=o.createContext(r);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);