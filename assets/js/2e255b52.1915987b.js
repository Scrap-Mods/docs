"use strict";(self.webpackChunkscrap_docs=self.webpackChunkscrap_docs||[]).push([[3583],{5198:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var s=r(4848),n=r(8453);const i={title:"String"},c="String",o={id:"structures/Networking/string",title:"String",description:'The String structure is a simple utf-8 encoded string type that is used to represent text, prefixed with a size in bytes. It is commonly used in the network protocol to represent text data. This pattern of a size prefixed string is sometimes referred to as a "Pascal String".',source:"@site/docs/structures/Networking/string.md",sourceDirName:"structures/Networking",slug:"/structures/Networking/string",permalink:"/docs/structures/Networking/string",draft:!1,unlisted:!1,editUrl:"https://pr.new/github.com/Scrap-Mods/docs/blob/main/docs/structures/Networking/string.md",tags:[],version:"current",frontMatter:{title:"String"},sidebar:"structuresSidebar",previous:{title:"BlobData",permalink:"/docs/structures/Networking/blobdata"},next:{title:"Character Customization",permalink:"/docs/structures/character-customization"}},d={},a=[{value:"Structure",id:"structure",level:2}];function u(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"string",children:"String"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"String"}),' structure is a simple utf-8 encoded string type that is used to represent text, prefixed with a size in bytes. It is commonly used in the network protocol to represent text data. This pattern of a size prefixed string is sometimes referred to as a "Pascal String".']}),"\n",(0,s.jsx)(e.h2,{id:"structure",children:"Structure"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Offset"}),(0,s.jsx)(e.th,{children:"Field Name"}),(0,s.jsx)(e.th,{children:"Field Type"}),(0,s.jsx)(e.th,{children:"Notes"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"0x00"}),(0,s.jsx)(e.td,{children:"Size"}),(0,s.jsx)(e.td,{children:"be u16"}),(0,s.jsx)(e.td,{children:"The size of the string in bytes."})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"0x02"}),(0,s.jsx)(e.td,{children:"Data"}),(0,s.jsx)(e.td,{children:"char[Size]"}),(0,s.jsx)(e.td,{children:"The utf-8 encoded string data."})]})]})]})]})}function l(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(u,{...t})}):u(t)}},8453:(t,e,r)=>{r.d(e,{R:()=>c,x:()=>o});var s=r(6540);const n={},i=s.createContext(n);function c(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:c(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);