"use strict";(self.webpackChunkscrap_docs=self.webpackChunkscrap_docs||[]).push([[5778],{2977:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=t(4848),r=t(8453);const i={title:"Playing - WIP"},c="Playing",s={id:"networking/Protocol/playing",title:"Playing - WIP",description:"The connection state of the player. After being accepted into the server.",source:"@site/docs/networking/Protocol/playing.mdx",sourceDirName:"networking/Protocol",slug:"/networking/Protocol/playing",permalink:"/docs/networking/Protocol/playing",draft:!1,unlisted:!1,editUrl:"https://pr.new/github.com/Scrap-Mods/docs/blob/main/docs/networking/Protocol/playing.mdx",tags:[],version:"current",frontMatter:{title:"Playing - WIP"},sidebar:"networkingSidebar",previous:{title:"Joining",permalink:"/docs/networking/Protocol/joining"},next:{title:"Common Encoding Patterns",permalink:"/docs/category/common-encoding-patterns"}},a={},l=[{value:"Packets",id:"packets",level:2}];function p(n){const e={h1:"h1",h2:"h2",p:"p",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"playing",children:"Playing"}),"\n",(0,o.jsx)(e.p,{children:"The connection state of the player. After being accepted into the server."}),"\n",(0,o.jsx)(e.h2,{id:"packets",children:"Packets"}),"\n",(0,o.jsx)(e.p,{children:"IDs: 0x11(17) - 0x24(40)"})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>s});var o=t(6540);const r={},i=o.createContext(r);function c(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);