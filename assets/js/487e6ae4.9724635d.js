"use strict";(self.webpackChunkscrap_docs=self.webpackChunkscrap_docs||[]).push([[2971],{3753:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=n(4848),i=n(8453);const s={title:"Local Rotation"},r="Local Rotation",a={id:"networking/concepts/local-rotation",title:"Local Rotation",description:"Rotation in 3D space can be represented using two vectors. Local rotation is a way to represent the rotation of an object relative to its own axes. This is in contrast to global rotation, which is relative to the world axes.",source:"@site/docs/networking/concepts/local-rotation.mdx",sourceDirName:"networking/concepts",slug:"/networking/concepts/local-rotation",permalink:"/docs/networking/concepts/local-rotation",draft:!1,unlisted:!1,editUrl:"https://pr.new/github.com/Scrap-Mods/docs/blob/main/docs/networking/concepts/local-rotation.mdx",tags:[],version:"current",frontMatter:{title:"Local Rotation"},sidebar:"networkingSidebar",previous:{title:"BitStream",permalink:"/docs/networking/common-encoding-patterns/bitstream"},next:{title:"UUID Network Map",permalink:"/docs/networking/concepts/uuid-network-map"}},c={},d=[{value:"Axis representation",id:"axis-representation",level:2},{value:"Default rotation",id:"default-rotation",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"local-rotation",children:"Local Rotation"}),"\n",(0,o.jsx)(t.p,{children:"Rotation in 3D space can be represented using two vectors. Local rotation is a way to represent the rotation of an object relative to its own axes. This is in contrast to global rotation, which is relative to the world axes."}),"\n",(0,o.jsx)(t.h2,{id:"axis-representation",children:"Axis representation"}),"\n",(0,o.jsx)(t.p,{children:"The game uses the X axis and the Z axis to represent the local rotation of an object. The Y axis is not used, as it is calculated from the X and Z axes."}),"\n",(0,o.jsx)(t.p,{children:"The index of the axis is represented by an integer value. The following table shows the mapping between the integer value and the axis:"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Value"}),(0,o.jsx)(t.th,{children:"Vector (XYZ)"}),(0,o.jsx)(t.th,{children:"Axis"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"-3"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"( 0,  0, -1)"})}),(0,o.jsx)(t.td,{children:"Negative Z axis"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"-2"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"( 0, -1,  0)"})}),(0,o.jsx)(t.td,{children:"Negative Y axis"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"-1"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"(-1,  0,  0)"})}),(0,o.jsx)(t.td,{children:"Negative X axis"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:" 1"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"( 1,  0,  0)"})}),(0,o.jsx)(t.td,{children:"Positive X axis"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:" 2"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"( 0,  1,  0)"})}),(0,o.jsx)(t.td,{children:"Positive Y axis"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:" 3"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"( 0,  0,  1)"})}),(0,o.jsx)(t.td,{children:"Positive Z axis"})]})]})]}),"\n",(0,o.jsx)(t.p,{children:"Any other value is invalid."}),"\n",(0,o.jsx)(t.p,{children:"Both blueprints and certain network packets use this representation to store the local rotation of an object."}),"\n",(0,o.jsx)(t.h2,{id:"default-rotation",children:"Default rotation"}),"\n",(0,o.jsxs)(t.p,{children:["The default rotation of a shape has an X axis of ",(0,o.jsx)(t.code,{children:"(1, 0, 0)"})," and a Z axis of ",(0,o.jsx)(t.code,{children:"(0, 0, 1)"}),". This means that the X axis of the shape aligns with the X axis of its body, and the Z axis aligns with the Z axis of its body."]}),"\n",(0,o.jsx)(t.p,{children:"Blocks always have the default rotation, while parts and joints can have any local rotation."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);